na.strings=c(""," ","NA"))
incidentes2017 <- read.csv('Incidentes_georreferenciados_2017.csv', sep = ',', header = T,
stringsAsFactors = T, encoding = "UTF-8",
na.strings=c(""," ","NA"))
incidentes2018 <- read.csv('Incidentes_georreferenciados_2018.csv', sep = ',', header = T,
stringsAsFactors = T, encoding = "UTF-8",
na.strings=c(""," ","NA"))
base_completa <- incidentes2014 %>% union(incidentes2015) %>%
union(incidentes2016) %>% union(incidentes2017) %>%
union(incidentes2018)
colnames(base_completa)[1] <- gsub('X.U.FEFF.','',colnames(base_completa)[1])
# Se remueven las bases innecesarias.
remove(incidentes2014, incidentes2015, incidentes2016, incidentes2017, incidentes2018)
base_completa <- base_completa %>%
select(OBJECTID, CLASE, GRAVEDAD, COMUNA, BARRIO, DISENO,
LATITUD, LONGITUD, FECHA, DIA, MES, PERIODO, HORA, DIA_NOMBRE)
# Número de comunas en el conjunto de entrenamiento
length(levels(base_completa$COMUNA))
base_completa %>% filter(!(COMUNA %in% c('Popular', 'Santa Cruz', 'Manrique', 'Aranjuez',
'Castilla', 'Doce de Octubre', 'Robledo', 'Villa Hermosa',
'Buenos Aires', 'La Candelaria', 'Laureles Estadio',
'La América', 'San Javier', 'El Poblado', 'Guayabal',
'Belén', 'Corregimiento de San Cristóbal',
'Corregimiento de San Antonio de Prado',
'Corregimiento de Santa Elena', 'Corregimiento de Altavista',
'Corregimiento de San Sebastián de Palmitas', NA))) %>% count(COMUNA, BARRIO, sort = T)
# Comuna y barrio como debería ser
base_completa[base_completa$BARRIO %in% 'Boston', ] %>% count(COMUNA, BARRIO)
# Comuna y barrio truncados
(base_completa[base_completa$COMUNA %in% 'Boston', ] %>% count(COMUNA, BARRIO))
base_completa[!(base_completa$COMUNA %in% c('Popular', 'Santa Cruz', 'Manrique',
'Aranjuez', 'Castilla', 'Doce de Octubre', 'Robledo',
'Villa Hermosa', 'Buenos Aires', 'La Candelaria',
'Laureles Estadio','La América', 'San Javier','El Poblado',
'Guayabal','Belén', 'Corregimiento de San Cristóbal',
'Corregimiento de San Antonio de Prado',
'Corregimiento de Santa Elena','Corregimiento de Altavista',
'Corregimiento de San Sebastián de Palmitas', NA, 'In',
'AU', 'SN')), ] <- base_completa %>%
filter(!(COMUNA %in% c('Popular', 'Santa Cruz', 'Manrique',
'Aranjuez', 'Castilla', 'Doce de Octubre', 'Robledo',
'Villa Hermosa', 'Buenos Aires', 'La Candelaria',
'Laureles Estadio','La América', 'San Javier','El Poblado',
'Guayabal','Belén', 'Corregimiento de San Cristóbal',
'Corregimiento de San Antonio de Prado',
'Corregimiento de Santa Elena', 'Corregimiento de Altavista',
'Corregimiento de San Sebastián de Palmitas', NA, 'In',
'AU', 'SN'))) %>%
mutate(temp_barrio = COMUNA, COMUNA = BARRIO, BARRIO = temp_barrio) %>%
mutate(temp_barrio = NULL)
base_completa %>% filter(!(COMUNA %in% c('Popular', 'Santa Cruz', 'Manrique', 'Aranjuez',
'Castilla', 'Doce de Octubre', 'Robledo', 'Villa Hermosa',
'Buenos Aires', 'La Candelaria', 'Laureles Estadio',
'La América', 'San Javier', 'El Poblado', 'Guayabal',
'Belén', 'Corregimiento de San Cristóbal',
'Corregimiento de San Antonio de Prado',
'Corregimiento de Santa Elena', 'Corregimiento de Altavista',
'Corregimiento de San Sebastián de Palmitas', NA))) %>% count(COMUNA, BARRIO, sort = T)
library(leaflet)
df <- data.frame(lat = base_completa[base_completa$COMUNA == 'In', "LATITUD"],
lng = base_completa[base_completa$COMUNA == 'In', "LONGITUD"])
df %>%
leaflet() %>%
addTiles() %>%
addMarkers()
df <- data.frame(lat = base_completa[base_completa$COMUNA == 'AU', "LATITUD"],
lng = base_completa[base_completa$COMUNA == 'AU', "LONGITUD"])
df %>%
leaflet() %>%
addTiles() %>%
addMarkers()
df <- data.frame(lat = base_completa[base_completa$COMUNA == 'SN', "LATITUD"],
lng = base_completa[base_completa$COMUNA == 'SN', "LONGITUD"])
df %>%
leaflet() %>%
addTiles() %>%
addMarkers()
df <- data.frame(lat = base_completa[base_completa$COMUNA == '0', "LATITUD"],
lng = base_completa[base_completa$COMUNA == '0', "LONGITUD"])
df %>%
leaflet() %>%
addTiles() %>%
addMarkers()
length(levels(base_completa$BARRIO))
# Número de barrios en el conjunto de entrenamiento
base_completa[base_completa$BARRIO %in% c('Berlin', 'Berlín'), ] %>% count(COMUNA, BARRIO)
base_completa$BARRIO <- as.character(base_completa$BARRIO)
base_completa$BARRIO <- iconv(base_completa$BARRIO,from="UTF-8",to="ASCII//TRANSLIT")
base_completa$BARRIO <- as.factor(base_completa$BARRIO)
# Algunos ejemplos
base_completa[base_completa$BARRIO %in% c("Asomadera No. 1", "Asomadera No.1", "Aures No. 2", "Aures No.2", "Bombona No. 1", "Bombona No.1", "B. Cerro  El Volador", "B. Cerro El Volador"), ] %>% count(COMUNA, BARRIO)
base_completa$BARRIO <- str_trim(base_completa$BARRIO) # Elimina espacios antes y despues (no en el medio)
base_completa$BARRIO <- gsub(pattern = "  ", replacement = " ",
x = base_completa$BARRIO)
base_completa$BARRIO <- gsub(pattern = "   ", replacement = " ",
x = base_completa$BARRIO)
base_completa$BARRIO <- gsub(pattern = "No. ", replacement = "No.",
x = base_completa$BARRIO)
base_completa$BARRIO <- gsub(pattern = "Barrios", replacement = "Barrio",
x = base_completa$BARRIO)
base_completa$BARRIO <- gsub(pattern = "de La Iguana", replacement = "de la Iguana",
x = base_completa$BARRIO)
base_completa$BARRIO <- gsub(pattern = "de Los Angeles", replacement = "de los Angeles",
x = base_completa$BARRIO)
base_completa$BARRIO <- gsub(pattern = "Villa Lilliam", replacement = "Villa Liliam",
x = base_completa$BARRIO)
base_completa$BARRIO <- as.factor(base_completa$BARRIO)
length(levels(base_completa$BARRIO))
base_completa$CLASE <- as.character(base_completa$CLASE)
base_completa$CLASE <- iconv(base_completa$CLASE,from="UTF-8",to="ASCII//TRANSLIT")
base_completa$CLASE <- str_trim(base_completa$CLASE) # Elimina espacios antes y despues (no en el medio)
base_completa$CLASE <- gsub(pattern = "Caida de Ocupante", replacement = "Caida Ocupante",
x = base_completa$CLASE)
base_completa$CLASE <- as.factor(base_completa$CLASE)
levels(base_completa$CLASE)
levels(base_completa$GRAVEDAD)
levels(base_completa$DISENO)
base_completa$DIA_NOMBRE <- as.character(base_completa$DIA_NOMBRE)
base_completa$DIA_NOMBRE <- iconv(base_completa$DIA_NOMBRE,from="UTF-8",to="ASCII//TRANSLIT")
base_completa$DIA_NOMBRE <- str_trim(base_completa$DIA_NOMBRE) # Elimina espacios antes y despues (no en el medio)
base_completa$DIA_NOMBRE <- as.factor(base_completa$DIA_NOMBRE)
levels(base_completa$DIA_NOMBRE)
head(base_completa)
sort(sapply(base_completa, function(y) sum(length(which(is.na(y))))), decreasing = T)
df <- data.frame(lat = base_completa[is.na(base_completa$BARRIO),"LATITUD"],
lng = base_completa[is.na(base_completa$BARRIO), "LONGITUD"])
df <- df[sample(1:(dim(df)[1]), size = 500), ]
df %>%
leaflet() %>%
addTiles() %>%
addMarkers()
df <- data.frame(lat = base_completa[base_completa$COMUNA == c('Corregimiento de San Cristóbal','Corregimiento de San Antonio de Prado','Corregimiento de Santa Elena', 'Corregimiento de Altavista','Corregimiento de San Sebastián de Palmitas'), "LATITUD"],
lng = base_completa[base_completa$COMUNA == c('Corregimiento de San Cristóbal','Corregimiento de San Antonio de Prado','Corregimiento de Santa Elena', 'Corregimiento de Altavista','Corregimiento de San Sebastián de Palmitas'), "LONGITUD"])
df <- df[sample(1:(dim(df)[1]), size = 500), ]
df %>%
leaflet() %>%
addTiles() %>%
addMarkers()
base_completa
setwd("C:/Users/Usuario/Desktop/NACHO/Semestre 8/TAE/Trabajo_1")
def.chunk.hook  <- knitr::knit_hooks$get("chunk")
knitr::knit_hooks$set(chunk = function(x, options) {
x <- def.chunk.hook(x, options)
ifelse(options$size != "normalsize", paste0("\n \\", options$size,"\n\n", x, "\n\n \\normalsize"), x)
})
knitr::opts_chunk$set(echo = TRUE, fig.align = 'center', size="footnotesize",
message = F)
library(stringr)
library(roperators)
library(dplyr)
library(caret)
library(class)
incidentes2014 <- read.csv('Incidentes_georreferenciados_2014.csv', sep = ',', header = T,
stringsAsFactors = T, encoding = "UTF-8",
na.strings=c(""," ","NA"))
incidentes2015 <- read.csv('Incidentes_georreferenciados_2015.csv', sep = ',', header = T,
stringsAsFactors = T, encoding = "UTF-8",
na.strings=c(""," ","NA"))
incidentes2016 <- read.csv('Incidentes_georreferenciados_2016.csv', sep = ',', header = T,
stringsAsFactors = T, encoding = "UTF-8",
na.strings=c(""," ","NA"))
incidentes2017 <- read.csv('Incidentes_georreferenciados_2017.csv', sep = ',', header = T,
stringsAsFactors = T, encoding = "UTF-8",
na.strings=c(""," ","NA"))
incidentes2018 <- read.csv('Incidentes_georreferenciados_2018.csv', sep = ',', header = T,
stringsAsFactors = T, encoding = "UTF-8",
na.strings=c(""," ","NA"))
base_completa <- incidentes2014 %>% union(incidentes2015) %>%
union(incidentes2016) %>% union(incidentes2017) %>%
union(incidentes2018)
colnames(base_completa)[1] <- gsub('X.U.FEFF.','',colnames(base_completa)[1])
# Se remueven las bases innecesarias.
remove(incidentes2014, incidentes2015, incidentes2016, incidentes2017, incidentes2018)
base_completa <- base_completa %>%
select(OBJECTID, CLASE, GRAVEDAD, COMUNA, BARRIO, DISENO,
LATITUD, LONGITUD, FECHA, DIA, MES, PERIODO, HORA, DIA_NOMBRE)
# Número de comunas en el conjunto de entrenamiento
length(levels(base_completa$COMUNA))
base_completa %>% filter(!(COMUNA %in% c('Popular', 'Santa Cruz', 'Manrique', 'Aranjuez',
'Castilla', 'Doce de Octubre', 'Robledo', 'Villa Hermosa',
'Buenos Aires', 'La Candelaria', 'Laureles Estadio',
'La América', 'San Javier', 'El Poblado', 'Guayabal',
'Belén', 'Corregimiento de San Cristóbal',
'Corregimiento de San Antonio de Prado',
'Corregimiento de Santa Elena', 'Corregimiento de Altavista',
'Corregimiento de San Sebastián de Palmitas', NA))) %>% count(COMUNA, BARRIO, sort = T)
# Comuna y barrio como debería ser
base_completa[base_completa$BARRIO %in% 'Boston', ] %>% count(COMUNA, BARRIO)
# Comuna y barrio truncados
(base_completa[base_completa$COMUNA %in% 'Boston', ] %>% count(COMUNA, BARRIO))
base_completa[!(base_completa$COMUNA %in% c('Popular', 'Santa Cruz', 'Manrique',
'Aranjuez', 'Castilla', 'Doce de Octubre', 'Robledo',
'Villa Hermosa', 'Buenos Aires', 'La Candelaria',
'Laureles Estadio','La América', 'San Javier','El Poblado',
'Guayabal','Belén', 'Corregimiento de San Cristóbal',
'Corregimiento de San Antonio de Prado',
'Corregimiento de Santa Elena','Corregimiento de Altavista',
'Corregimiento de San Sebastián de Palmitas', NA, 'In',
'AU', 'SN')), ] <- base_completa %>%
filter(!(COMUNA %in% c('Popular', 'Santa Cruz', 'Manrique',
'Aranjuez', 'Castilla', 'Doce de Octubre', 'Robledo',
'Villa Hermosa', 'Buenos Aires', 'La Candelaria',
'Laureles Estadio','La América', 'San Javier','El Poblado',
'Guayabal','Belén', 'Corregimiento de San Cristóbal',
'Corregimiento de San Antonio de Prado',
'Corregimiento de Santa Elena', 'Corregimiento de Altavista',
'Corregimiento de San Sebastián de Palmitas', NA, 'In',
'AU', 'SN'))) %>%
mutate(temp_barrio = COMUNA, COMUNA = BARRIO, BARRIO = temp_barrio) %>%
mutate(temp_barrio = NULL)
base_completa %>% filter(!(COMUNA %in% c('Popular', 'Santa Cruz', 'Manrique', 'Aranjuez',
'Castilla', 'Doce de Octubre', 'Robledo', 'Villa Hermosa',
'Buenos Aires', 'La Candelaria', 'Laureles Estadio',
'La América', 'San Javier', 'El Poblado', 'Guayabal',
'Belén', 'Corregimiento de San Cristóbal',
'Corregimiento de San Antonio de Prado',
'Corregimiento de Santa Elena', 'Corregimiento de Altavista',
'Corregimiento de San Sebastián de Palmitas', NA))) %>% count(COMUNA, BARRIO, sort = T)
base_completa$COMUNA[base_completa$COMUNA %in% c("In", "AU", "SN", "0")] <- NA
base_completa$BARRIO[base_completa$BARRIO %in% c("Inst", "AUC1", "AUC2", "SN", "0")] <- NA
base_completa$COMUNA <- factor(base_completa$COMUNA)
length(levels(base_completa$BARRIO))
# Número de barrios en el conjunto de entrenamiento
base_completa[base_completa$BARRIO %in% c('Berlin', 'Berlín'), ] %>% count(COMUNA, BARRIO)
base_completa$BARRIO <- as.character(base_completa$BARRIO)
base_completa$BARRIO <- iconv(base_completa$BARRIO,from="UTF-8",to="ASCII//TRANSLIT")
base_completa$BARRIO <- as.factor(base_completa$BARRIO)
# Algunos ejemplos
base_completa[base_completa$BARRIO %in% c("Asomadera No. 1", "Asomadera No.1", "Aures No. 2", "Aures No.2", "Bombona No. 1", "Bombona No.1", "B. Cerro  El Volador", "B. Cerro El Volador"), ] %>% count(COMUNA, BARRIO)
base_completa$BARRIO <- str_trim(base_completa$BARRIO) # Elimina espacios antes y despues (no en el medio)
base_completa$BARRIO <- gsub(pattern = "  ", replacement = " ",
x = base_completa$BARRIO)
base_completa$BARRIO <- gsub(pattern = "   ", replacement = " ",
x = base_completa$BARRIO)
base_completa$BARRIO <- gsub(pattern = "No. ", replacement = "No.",
x = base_completa$BARRIO)
base_completa$BARRIO <- gsub(pattern = "Barrios", replacement = "Barrio",
x = base_completa$BARRIO)
base_completa$BARRIO <- gsub(pattern = "de La Iguana", replacement = "de la Iguana",
x = base_completa$BARRIO)
base_completa$BARRIO <- gsub(pattern = "de Los Angeles", replacement = "de los Angeles",
x = base_completa$BARRIO)
base_completa$BARRIO <- gsub(pattern = "Villa Lilliam", replacement = "Villa Liliam",
x = base_completa$BARRIO)
base_completa$BARRIO <- factor(base_completa$BARRIO)
length(levels(base_completa$BARRIO))
base_completa$CLASE <- as.character(base_completa$CLASE)
base_completa$CLASE <- iconv(base_completa$CLASE,from="UTF-8",to="ASCII//TRANSLIT")
base_completa$CLASE <- str_trim(base_completa$CLASE) # Elimina espacios antes y despues (no en el medio)
base_completa$CLASE <- gsub(pattern = "Caida de Ocupante", replacement = "Caida Ocupante",
x = base_completa$CLASE)
base_completa$CLASE <- as.factor(base_completa$CLASE)
levels(base_completa$CLASE)
levels(base_completa$GRAVEDAD)
levels(base_completa$DISENO)
base_completa$DIA_NOMBRE <- as.character(base_completa$DIA_NOMBRE)
base_completa$DIA_NOMBRE <- iconv(base_completa$DIA_NOMBRE,from="UTF-8",to="ASCII//TRANSLIT")
base_completa$DIA_NOMBRE <- str_trim(base_completa$DIA_NOMBRE) # Elimina espacios antes y despues (no en el medio)
base_completa$DIA_NOMBRE <- as.factor(base_completa$DIA_NOMBRE)
levels(base_completa$DIA_NOMBRE)
sort(sapply(base_completa, function(y) sum(length(which(is.na(y))))), decreasing = T)
levels(base_completa$DISENO) <- c(levels(base_completa$DISENO), "No Registrado")
base_completa$DISENO[is.na(base_completa$DISENO)] <-
rep("No Registrado", times = length(base_completa$DISENO[is.na(base_completa$DISENO)]))
base_completa <- na.omit(base_completa)
write.csv(base_completa, "Base_Completa_NAomit.csv")
def.chunk.hook  <- knitr::knit_hooks$get("chunk")
knitr::knit_hooks$set(chunk = function(x, options) {
x <- def.chunk.hook(x, options)
ifelse(options$size != "normalsize", paste0("\n \\", options$size,"\n\n", x, "\n\n \\normalsize"), x)
})
knitr::opts_chunk$set(echo = TRUE, fig.align = 'center', size="footnotesize",
message = F)
library(stringr)
library(roperators)
library(dplyr)
library(caret)
library(class)
incidentes2014 <- read.csv('Incidentes_georreferenciados_2014.csv', sep = ',', header = T,
stringsAsFactors = T, encoding = "UTF-8",
na.strings=c(""," ","NA"))
incidentes2015 <- read.csv('Incidentes_georreferenciados_2015.csv', sep = ',', header = T,
stringsAsFactors = T, encoding = "UTF-8",
na.strings=c(""," ","NA"))
incidentes2016 <- read.csv('Incidentes_georreferenciados_2016.csv', sep = ',', header = T,
stringsAsFactors = T, encoding = "UTF-8",
na.strings=c(""," ","NA"))
incidentes2017 <- read.csv('Incidentes_georreferenciados_2017.csv', sep = ',', header = T,
stringsAsFactors = T, encoding = "UTF-8",
na.strings=c(""," ","NA"))
incidentes2018 <- read.csv('Incidentes_georreferenciados_2018.csv', sep = ',', header = T,
stringsAsFactors = T, encoding = "UTF-8",
na.strings=c(""," ","NA"))
base_completa <- incidentes2014 %>% union(incidentes2015) %>%
union(incidentes2016) %>% union(incidentes2017) %>%
union(incidentes2018)
colnames(base_completa)[1] <- gsub('X.U.FEFF.','',colnames(base_completa)[1])
# Se remueven las bases innecesarias.
remove(incidentes2014, incidentes2015, incidentes2016, incidentes2017, incidentes2018)
base_completa <- base_completa %>%
select(OBJECTID, CLASE, GRAVEDAD, COMUNA, BARRIO, DISENO,
LATITUD, LONGITUD, FECHA, DIA, MES, PERIODO, HORA, DIA_NOMBRE)
# Número de comunas en el conjunto de entrenamiento
length(levels(base_completa$COMUNA))
base_completa %>% filter(!(COMUNA %in% c('Popular', 'Santa Cruz', 'Manrique', 'Aranjuez',
'Castilla', 'Doce de Octubre', 'Robledo', 'Villa Hermosa',
'Buenos Aires', 'La Candelaria', 'Laureles Estadio',
'La América', 'San Javier', 'El Poblado', 'Guayabal',
'Belén', 'Corregimiento de San Cristóbal',
'Corregimiento de San Antonio de Prado',
'Corregimiento de Santa Elena', 'Corregimiento de Altavista',
'Corregimiento de San Sebastián de Palmitas', NA))) %>% count(COMUNA, BARRIO, sort = T)
# Comuna y barrio como debería ser
base_completa[base_completa$BARRIO %in% 'Boston', ] %>% count(COMUNA, BARRIO)
# Comuna y barrio truncados
(base_completa[base_completa$COMUNA %in% 'Boston', ] %>% count(COMUNA, BARRIO))
base_completa[!(base_completa$COMUNA %in% c('Popular', 'Santa Cruz', 'Manrique',
'Aranjuez', 'Castilla', 'Doce de Octubre', 'Robledo',
'Villa Hermosa', 'Buenos Aires', 'La Candelaria',
'Laureles Estadio','La América', 'San Javier','El Poblado',
'Guayabal','Belén', 'Corregimiento de San Cristóbal',
'Corregimiento de San Antonio de Prado',
'Corregimiento de Santa Elena','Corregimiento de Altavista',
'Corregimiento de San Sebastián de Palmitas', NA, 'In',
'AU', 'SN')), ] <- base_completa %>%
filter(!(COMUNA %in% c('Popular', 'Santa Cruz', 'Manrique',
'Aranjuez', 'Castilla', 'Doce de Octubre', 'Robledo',
'Villa Hermosa', 'Buenos Aires', 'La Candelaria',
'Laureles Estadio','La América', 'San Javier','El Poblado',
'Guayabal','Belén', 'Corregimiento de San Cristóbal',
'Corregimiento de San Antonio de Prado',
'Corregimiento de Santa Elena', 'Corregimiento de Altavista',
'Corregimiento de San Sebastián de Palmitas', NA, 'In',
'AU', 'SN'))) %>%
mutate(temp_barrio = COMUNA, COMUNA = BARRIO, BARRIO = temp_barrio) %>%
mutate(temp_barrio = NULL)
base_completa %>% filter(!(COMUNA %in% c('Popular', 'Santa Cruz', 'Manrique', 'Aranjuez',
'Castilla', 'Doce de Octubre', 'Robledo', 'Villa Hermosa',
'Buenos Aires', 'La Candelaria', 'Laureles Estadio',
'La América', 'San Javier', 'El Poblado', 'Guayabal',
'Belén', 'Corregimiento de San Cristóbal',
'Corregimiento de San Antonio de Prado',
'Corregimiento de Santa Elena', 'Corregimiento de Altavista',
'Corregimiento de San Sebastián de Palmitas', NA))) %>% count(COMUNA, BARRIO, sort = T)
base_completa$COMUNA[base_completa$COMUNA %in% c("In", "AU", "SN", "0")] <- NA
base_completa$BARRIO[base_completa$BARRIO %in% c("Inst", "AUC1", "AUC2", "SN", "0")] <- NA
base_completa$COMUNA <- factor(base_completa$COMUNA)
length(levels(base_completa$BARRIO))
# Número de barrios en el conjunto de entrenamiento
base_completa[base_completa$BARRIO %in% c('Berlin', 'Berlín'), ] %>% count(COMUNA, BARRIO)
base_completa$BARRIO <- as.character(base_completa$BARRIO)
base_completa$BARRIO <- iconv(base_completa$BARRIO,from="UTF-8",to="ASCII//TRANSLIT")
base_completa$BARRIO <- as.factor(base_completa$BARRIO)
# Algunos ejemplos
base_completa[base_completa$BARRIO %in% c("Asomadera No. 1", "Asomadera No.1", "Aures No. 2", "Aures No.2", "Bombona No. 1", "Bombona No.1", "B. Cerro  El Volador", "B. Cerro El Volador"), ] %>% count(COMUNA, BARRIO)
base_completa$BARRIO <- str_trim(base_completa$BARRIO) # Elimina espacios antes y despues (no en el medio)
base_completa$BARRIO <- gsub(pattern = "  ", replacement = " ",
x = base_completa$BARRIO)
base_completa$BARRIO <- gsub(pattern = "   ", replacement = " ",
x = base_completa$BARRIO)
base_completa$BARRIO <- gsub(pattern = "No. ", replacement = "No.",
x = base_completa$BARRIO)
base_completa$BARRIO <- gsub(pattern = "Barrios", replacement = "Barrio",
x = base_completa$BARRIO)
base_completa$BARRIO <- gsub(pattern = "de La Iguana", replacement = "de la Iguana",
x = base_completa$BARRIO)
base_completa$BARRIO <- gsub(pattern = "de Los Angeles", replacement = "de los Angeles",
x = base_completa$BARRIO)
base_completa$BARRIO <- gsub(pattern = "Villa Lilliam", replacement = "Villa Liliam",
x = base_completa$BARRIO)
base_completa$BARRIO <- factor(base_completa$BARRIO)
length(levels(base_completa$BARRIO))
base_completa$CLASE <- as.character(base_completa$CLASE)
base_completa$CLASE <- iconv(base_completa$CLASE,from="UTF-8",to="ASCII//TRANSLIT")
base_completa$CLASE <- str_trim(base_completa$CLASE) # Elimina espacios antes y despues (no en el medio)
base_completa$CLASE <- gsub(pattern = "Caida de Ocupante", replacement = "Caida Ocupante",
x = base_completa$CLASE)
base_completa$CLASE <- as.factor(base_completa$CLASE)
levels(base_completa$CLASE)
levels(base_completa$GRAVEDAD)
levels(base_completa$DISENO)
base_completa$DIA_NOMBRE <- as.character(base_completa$DIA_NOMBRE)
base_completa$DIA_NOMBRE <- iconv(base_completa$DIA_NOMBRE,from="UTF-8",to="ASCII//TRANSLIT")
base_completa$DIA_NOMBRE <- str_trim(base_completa$DIA_NOMBRE) # Elimina espacios antes y despues (no en el medio)
base_completa$DIA_NOMBRE <- as.factor(base_completa$DIA_NOMBRE)
levels(base_completa$DIA_NOMBRE)
sort(sapply(base_completa, function(y) sum(length(which(is.na(y))))), decreasing = T)
levels(base_completa$DISENO) <- c(levels(base_completa$DISENO), "No Registrado")
base_completa$DISENO[is.na(base_completa$DISENO)] <-
rep("No Registrado", times = length(base_completa$DISENO[is.na(base_completa$DISENO)]))
#base_completa <- na.omit(base_completa)
#write.csv(base_completa, "Base_Completa_NAomit.csv")
dim(base_completa[!is.na(base_completa$COMUNA), ])
set.seed(120120)
trControl <- trainControl(method  = "cv",
number  = 10)
fit <- train(COMUNA ~ scale(LATITUD) + scale(LONGITUD),
method     = "knn",
tuneGrid   = expand.grid(k = seq(1, 20, 3)),
trControl  = trControl,
metric     = "Accuracy",
data       = base_completa[!is.na(base_completa$COMUNA), ])
set.seed(120120)
trControl <- trainControl(method  = "cv",
number  = 10)
fit <- train(COMUNA ~ scale(LATITUD) + scale(LONGITUD),
method     = "knn",
tuneGrid   = expand.grid(k = seq(1, 20, 3)),
trControl  = trControl,
metric     = "Accuracy",
data       = base_completa,
na.action = "na.omit")
plot(fit)
View(base_completa)
base_completa[base_completa$PERIODO != 2018,]
set.seed(120120)
trControl <- trainControl(method  = "cv",
number  = 10)
fit <- train(COMUNA ~ scale(LATITUD) + scale(LONGITUD),
method     = "knn",
tuneGrid   = expand.grid(k = seq(1, 20, 3)),
trControl  = trControl,
metric     = "Accuracy",
data       = base_completa[base_completa$PERIODO != 2018, ],
na.action = "na.omit")
plot(fit)
knnPredict <- predict(fit,newdata = base_completa[base_completa$PERIODO == 2018, ],
na.action = "na.omit")
confusionMatrix(knnPredict, na.omit(base_completa[base_completa$PERIODO == 2018, ]))
confusionMatrix(knnPredict, na.omit(base_completa[base_completa$PERIODO == 2018, "COMUNA"]))
length(knnPredict)
length(na.omit(base_completa[base_completa$PERIODO == 2018, "COMUNA"]))
confusionMatrix(knnPredict, base_completa[base_completa$PERIODO == 2018, "COMUNA"])
confu1 <- confusionMatrix(knnPredict, base_completa[base_completa$PERIODO == 2018, "COMUNA"])
confu1$
confu1$overall
confu1 <- confusionMatrix(knnPredict, base_completa[base_completa$PERIODO == 2018, "COMUNA"])
confu1$overall
base_completa$COMUNA[is.na(base_completa$COMUNA)]
base_completa$COMUNA[is.na(base_completa$COMUNA)] <-
predict(fit, newdata = base_completa$COMUNA[is.na(base_completa$COMUNA)])
base_completa$COMUNA[is.na(base_completa$COMUNA)] <-
predict(fit, newdata = base_completa[is.na(base_completa$COMUNA), ])
base_completa %>% count(COMUNA)
base_completa %>% count(COMUNA, sort = T)
fit2 <- knn(train = cbind(scale(base_completa[!is.na(BARRIO),c("LATITUD", "LONGITUD")]),
base_completa[!is.na(BARRIO), "COMUNA"]),
test = cbind(scale(base_completa[is.na(BARRIO),c("LATITUD", "LONGITUD")]),
base_completa[is.na(BARRIO), "COMUNA"]),
k = 1,
cl = base_completa[!is.na(BARRIO), "BARRIO"],
use.all = T)
fit2 <- knn(train = cbind(scale(base_completa[!is.na(base_completa$BARRIO),
c("LATITUD", "LONGITUD")]),
base_completa[!is.na(base_completa$BARRIO), "COMUNA"]),
test = cbind(scale(base_completa[is.na(base_completa$BARRIO),c("LATITUD", "LONGITUD")]),
base_completa[is.na(base_completa$BARRIO), "COMUNA"]),
k = 1,
cl = base_completa[!is.na(base_completa$BARRIO), "BARRIO"],
use.all = T)
dim(table(factor(fit2), base_completa[!is.na(base_completa$BARRIO), "BARRIO"]))
dim(table(factor(fit2), base_completa[is.na(base_completa$BARRIO), "BARRIO"]))
levels(factor(fit2))
sort(sapply(base_completa, function(y) sum(length(which(is.na(y))))), decreasing = T)
table(factor(fit2), base_completa[is.na(base_completa$BARRIO), "BARRIO"])
base_completa[!is.na(base_completa$BARRIO), "COMUNA"]
base_completa[is.na(base_completa$BARRIO), "COMUNA"]
fit2 <- knn.cv(train = cbind(scale(base_completa[!is.na(base_completa$BARRIO),
c("LATITUD", "LONGITUD")]),
base_completa[!is.na(base_completa$BARRIO), "COMUNA"]),
k = 1,
cl = base_completa[!is.na(base_completa$BARRIO), "BARRIO"],
use.all = T)
dim(table(factor(fit2), base_completa[is.na(base_completa$BARRIO), "BARRIO"]))
dim(table(factor(fit2), base_completa[!is.na(base_completa$BARRIO), "BARRIO"]))
confu2 <- dim(table(factor(fit2), base_completa[!is.na(base_completa$BARRIO), "BARRIO"]))
confu2 <- table(factor(fit2), base_completa[!is.na(base_completa$BARRIO), "BARRIO"])
dim(confu2)
colnames(confu2)[!which(colnames(confu2) %in% rownames(confu2))]
colnames(confu2)[which(colnames(confu2) %in% rownames(confu2))]
colnames(confu2)[-which(colnames(confu2) %in% rownames(confu2))]
dim(confu2[,-c("9086", "El Plan", "El Uvito", "Piedra Gorda", "Suburbano Potrerito",
"Travesias", "Volcana Guayabal")])
confu2[,!c("9086", "El Plan", "El Uvito", "Piedra Gorda", "Suburbano Potrerito",
"Travesias", "Volcana Guayabal")]
confu2[, colnames(confu2) %in% c("9086", "El Plan", "El Uvito", "Piedra Gorda", "Suburbano Potrerito",
"Travesias", "Volcana Guayabal")]
confu2[, -(colnames(confu2) %in% c("9086", "El Plan", "El Uvito", "Piedra Gorda", "Suburbano Potrerito",
"Travesias", "Volcana Guayabal"))]
dim(confu2[, -(colnames(confu2) %in% c("9086", "El Plan", "El Uvito", "Piedra Gorda", "Suburbano Potrerito",
"Travesias", "Volcana Guayabal"))])
dim(confu2[, !(colnames(confu2) %in% c("9086", "El Plan", "El Uvito", "Piedra Gorda", "Suburbano Potrerito",
"Travesias", "Volcana Guayabal"))])
confu2 <- confu2[, !(colnames(confu2) %in% c("9086", "El Plan", "El Uvito",
"Piedra Gorda", "Suburbano Potrerito",
"Travesias", "Volcana Guayabal"))]
dim(confu2)
sum(diag(confu2)) / sum(confu2)
fit3 <- knn(train = cbind(scale(base_completa[!is.na(base_completa$BARRIO),
c("LATITUD", "LONGITUD")]),
base_completa[!is.na(base_completa$BARRIO), "COMUNA"]),
test = cbind(scale(base_completa[is.na(base_completa$BARRIO),c("LATITUD", "LONGITUD")]),
base_completa[is.na(base_completa$BARRIO), "COMUNA"]),
k = 1,
cl = base_completa[!is.na(base_completa$BARRIO), "BARRIO"],
use.all = T)
levels(factor(fit3))
base_completa$BARRIO[is.na(base_completa$BARRIO)] <- factor(fit3)
sort(sapply(base_completa, function(y) sum(length(which(is.na(y))))), decreasing = T)
base_completa <- na.omit(base_completa)
sort(sapply(base_completa, function(y) sum(length(which(is.na(y))))), decreasing = T)
write.csv(base_completa, "Base_Completa_NAimp.csv")
