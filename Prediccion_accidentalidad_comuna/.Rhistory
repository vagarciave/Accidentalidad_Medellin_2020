pexp(30,rate = 0.04)
pexp(30,rate = 0.044)
1-pnorm(3.063)
qnorm(0.85)
x <- c(205.7,207.6,205.8,206.2,203.1,214.1,204.6,209.8,208.4,212.3,206.1,204.1,205.5,203.0,208.7,208.9,204.2,205.5,205.7,207.8,204.2,211.9,206.1,203.8,205.2,207.7,205.8,208.4,205.3,201.0,205.5)
t.test(x, conf.level = 0.95)
qt(0.025,length(x)-1)
qt(0.025,length(x)-1,lower.tail = F)
#punto2
t.test(x, conf.level = 0.95,alternative = 'less')
#punto2
t.test(x, mu = 205,conf.level = 0.95,alternative = 'less')
tc <- sqrt(31)*(mean(x)/sd(x))
tc
tc <- sqrt(31)*(mean(x)-205/sd(x))
tc
tc <- sqrt(31)*((mean(x)-205)/sd(x))
tc
#Region de rechazo
c(-Inf,qt(0.05))
#Region de rechazo
c(-Inf,qt(0.05,30))
#valorp
pt(tc, df = 30)
x = (n-1)*(var(kilometros)/5^2)
x = (30-1)*(var(x)/5^2)
x
var(x)
var(x)
var(x)
x <- c(205.7,207.6,205.8,206.2,203.1,214.1,204.6,209.8,208.4,212.3,206.1,204.1,205.5,203.0,208.7,208.9,204.2,205.5,205.7,207.8,204.2,211.9,206.1,203.8,205.2,207.7,205.8,208.4,205.3,201.0,205.5)
var(x)
x = (30-1)*(var(x)/5^2)
sd(x)
library(stests)
var.test(x)
x <- c(205.7,207.6,205.8,206.2,203.1,214.1,204.6,209.8,208.4,212.3,206.1,204.1,205.5,203.0,208.7,208.9,204.2,205.5,205.7,207.8,204.2,211.9,206.1,203.8,205.2,207.7,205.8,208.4,205.3,201.0,205.5)
var.test(x)
x <- c(205.7,207.6,205.8,206.2,203.1,214.1,204.6,209.8,208.4,212.3,206.1,204.1,205.5,203.0,208.7,208.9,204.2,205.5,205.7,207.8,204.2,211.9,206.1,203.8,205.2,207.7,205.8,208.4,205.3,201.0,205.5)
x = (30-1)*(var(x)/(5^2))
x
x = (31-1)*(var(x)/(5^2))
x
(30)*(var(x)/(25))
var.test(x, null.value = 5^2)
x <- c(205.7,207.6,205.8,206.2,203.1,214.1,204.6,209.8,208.4,212.3,206.1,204.1,205.5,203.0,208.7,208.9,204.2,205.5,205.7,207.8,204.2,211.9,206.1,203.8,205.2,207.7,205.8,208.4,205.3,201.0,205.5)
var.test(x, null.value = 5^2)
n <- 31
2*min(pchisq(x),pchisq(x,df = n-1, lower.tail = F))
2*min(pchisq(x, df = n-1),pchisq(x,df = n-1, lower.tail = F))
x = (30)*(var(x)/(25))
2*min(pchisq(x, df = n-1),pchisq(x,df = n-1, lower.tail = F))
c(-Inf, qchisq(alpha/2, df = n-1,lower.tail = F))
c(qchisq(1-alpha/2, df = n-1),Inf)
c(-Inf, qchisq(0.05/2, df = n-1,lower.tail = F))
c(qchisq(1-0.05/2, df = n-1),Inf)
c(-Inf, qchisq(0.05/2, df = n-1,lower.tail = F))
c(qchisq(1-(0.05/2), df = n-1),Inf)
c(-Inf, qchisq(0.05/2, df = n-1))
c(qchisq(1-(0.05/2), df = n-1),Inf)
x = (30)*(var(x)/(25))
x
x <- c(205.7,207.6,205.8,206.2,203.1,214.1,204.6,209.8,208.4,212.3,206.1,204.1,205.5,203.0,208.7,208.9,204.2,205.5,205.7,207.8,204.2,211.9,206.1,203.8,205.2,207.7,205.8,208.4,205.3,201.0,205.5)
x2 = (30)*(var(x)/(25))
x2
c(-Inf, qchisq(0.05/2, df = n-1)) UNIDO c(qchisq(1-(0.05/2), df = n-1),Inf)
c(-Inf, qchisq(0.05/2, df = n-1))c(qchisq(1-(0.05/2), df = n-1),Inf)
c(-Inf, qchisq(0.05/2, df = n-1))
c(-Inf, qchisq(0.05/2, df = n-1))
c(qchisq(1-(0.05/2), df = n-1),Inf)
2*min(pchisq(9.74, df = n-1),pchisq(9.74,df = n-1, lower.tail = F))
x <- c(205.7,207.6,205.8,206.2,203.1,214.1,204.6,209.8,208.4,212.3,206.1,204.1,205.5,203.0,208.7,208.9,204.2,205.5,205.7,207.8,204.2,211.9,206.1,203.8,205.2,207.7,205.8,208.4,205.3,201.0,205.5)
sd(x)
sd(x)^4
sd(x)^2
0.6875+0.16369+0.062958+0.030463+0.016924+0.01032+0.00673
1-0.978585
0.030463+0.016924+0.01032
.16369+0.062958+0.030463+0.016924
0.16369+0.062958+0.030463+0.016924
0.274035/0.16369
1.02188*0.0577
shiny::runApp('Documents/GitHub/Accidentalidad_Medellin_2020/Shiny_dashboard')
runApp('Documents/GitHub/Accidentalidad_Medellin_2020/Shiny_dashboard')
runApp('Documents/GitHub/Accidentalidad_Medellin_2020/Shiny_dashboard')
runApp('Documents/GitHub/Accidentalidad_Medellin_2020/Shiny_dashboard')
runApp('Documents/GitHub/Accidentalidad_Medellin_2020/Shiny_dashboard')
shiny::runApp('Documents/GitHub/Accidentalidad_Medellin_2020/Shiny_dashboard')
runApp('Documents/GitHub/Accidentalidad_Medellin_2020/Shiny_dashboard')
runApp('Documents/GitHub/Accidentalidad_Medellin_2020/Shiny_dashboard')
runApp('Documents/GitHub/Accidentalidad_Medellin_2020/Shiny_dashboard')
runApp('Documents/GitHub/Accidentalidad_Medellin_2020/Shiny_dashboard')
runApp('Documents/GitHub/Accidentalidad_Medellin_2020/Shiny_dashboard')
runApp('Documents/GitHub/Accidentalidad_Medellin_2020/Shiny_dashboard')
runApp('Documents/GitHub/Accidentalidad_Medellin_2020/Shiny_dashboard')
runApp('Documents/GitHub/Accidentalidad_Medellin_2020/Shiny_dashboard')
install.packages("RColorBrewer")
runApp('Documents/GitHub/Accidentalidad_Medellin_2020/Shiny_dashboard')
runApp('Documents/GitHub/Accidentalidad_Medellin_2020/Shiny_dashboard')
runApp('Documents/GitHub/Accidentalidad_Medellin_2020/Shiny_dashboard')
runApp('Documents/GitHub/Accidentalidad_Medellin_2020/Shiny_dashboard')
runApp('Documents/GitHub/Accidentalidad_Medellin_2020/Shiny_dashboard')
runApp('Documents/GitHub/Accidentalidad_Medellin_2020/Shiny_dashboard')
runApp('Documents/GitHub/Accidentalidad_Medellin_2020/Shiny_dashboard')
runApp('Documents/GitHub/Accidentalidad_Medellin_2020/Shiny_dashboard')
runApp('Documents/GitHub/Accidentalidad_Medellin_2020/Shiny_dashboard')
runApp('Documents/GitHub/Accidentalidad_Medellin_2020/Shiny_dashboard')
runApp('Documents/GitHub/Accidentalidad_Medellin_2020/Shiny_dashboard')
runApp('Documents/GitHub/Accidentalidad_Medellin_2020/Shiny_dashboard')
runApp('Documents/GitHub/Accidentalidad_Medellin_2020/Shiny_dashboard')
runApp('Documents/GitHub/Accidentalidad_Medellin_2020/Shiny_dashboard')
runApp('Documents/GitHub/Accidentalidad_Medellin_2020/Shiny_dashboard')
runApp('Documents/GitHub/Accidentalidad_Medellin_2020/Shiny_dashboard')
runApp('Documents/GitHub/Accidentalidad_Medellin_2020/Shiny_dashboard')
runApp('Documents/GitHub/Accidentalidad_Medellin_2020/Shiny_dashboard')
runApp('Documents/GitHub/Accidentalidad_Medellin_2020/Shiny_dashboard')
runApp('Documents/GitHub/Accidentalidad_Medellin_2020/Shiny_dashboard')
runApp('Documents/GitHub/Accidentalidad_Medellin_2020/Shiny_dashboard')
runApp('Documents/GitHub/Accidentalidad_Medellin_2020/Shiny_dashboard')
setwd("~/Downloads/Project_x-master-4/Shiny_dashboard")
runApp()
runApp()
# Leer datos
medellin_map_location <-"Barrio_Vereda.shp"
# Datos con los clusters
df_coloring <- read.csv("clusters_final.csv", header = TRUE, fileEncoding = "UTF-8")[,-1]
barrios_med <- shapefile(medellin_map_location,
encoding="UTF-8",
use_iconv=TRUE)
colnames(df_coloring)[2] <- "NOMBRE"
runApp()
runApp()
runApp('~/Documents/GitHub/Accidentalidad_Medellin_2020/Shiny_dashboard')
runApp('~/Documents/GitHub/Accidentalidad_Medellin_2020/Shiny_dashboard')
runApp('~/Documents/GitHub/Accidentalidad_Medellin_2020/Shiny_dashboard')
runApp('~/Documents/GitHub/Accidentalidad_Medellin_2020/Shiny_dashboard')
runApp('~/Documents/GitHub/Accidentalidad_Medellin_2020/Shiny_dashboard')
runApp('~/Documents/GitHub/Accidentalidad_Medellin_2020/Shiny_dashboard')
runApp('~/Documents/GitHub/Accidentalidad_Medellin_2020/Shiny_dashboard')
runApp('~/Documents/GitHub/Accidentalidad_Medellin_2020/Shiny_dashboard')
runApp('~/Documents/GitHub/Accidentalidad_Medellin_2020/Shiny_dashboard')
# Leer datos
medellin_map_location <-"Barrio_Vereda.shp"
# Datos con los clusters
df_coloring <- read.csv("clusters_final-2.csv", header = TRUE, fileEncoding = "UTF-8")[,-1]
View(df_coloring)
names(df_coloring)
# Datos con los clusters
df_coloring <- read.csv("clusters_final-2.csv", header = TRUE, fileEncoding = "UTF-8")[,-c(1,2)]
names(df_coloring)
runApp('~/Documents/GitHub/Accidentalidad_Medellin_2020/Shiny_dashboard')
# Leer datos
medellin_map_location <-"Barrio_Vereda.shp"
# Datos con los clusters
df_coloring <- read.csv("clusters_final-2.csv", header = TRUE, fileEncoding = "UTF-8")[,-c(1,2)]
barrios_med <- shapefile(medellin_map_location,
encoding="UTF-8",
use_iconv=TRUE)
colnames(df_coloring)<- c("NOMBRE","HERIDOS","SOLO_DANOS","NRO_CLUSTER","NOMBRE_CLUSTER")
id_x <- match(barrios_med@data$NOMBRE,df_coloring$NOMBRE)
# Agregar seguridad
barrios_med@data$NOMBRE_CLUSTER <- df_coloring$NOMBRE_CLUSTER[id_x]
barrios_med@data$HERIDOS <- df_coloring$HERIDOS[id_x]
barrios_med@data$MUERTOS <- df_coloring$MUERTOS[id_x]
barrios_med@data$SOLO_DANOS <- df_coloring$SOLO_DANOS[id_x]
pal <- colorFactor(c("red","#ED683C","yellow","green","#D0C7C7"),
levels = c("Accidentalidad Alta",
"Accidentalidad Media",
"Accidentalidad moderada",
"Accidentalidad Baja",
NA))
popup <- paste(barrios_med@data$NOMBRE,
barrios_med@data$NOMBRE_CLUSTER,
paste('Muertos: ',barrios_med@data$MUERTOS),
paste('Heridos: ',barrios_med@data$HERIDOS),
paste('Solo daÃ±os: ',barrios_med@data$SOLO_DANOS),
sep="<br/>")
# Crear mapa
accidentes_barrios <- leaflet(barrios_med)
accidentes_barrios <- addProviderTiles(accidentes_barrios,provider="OpenStreetMap.Mapnik")
accidentes_barrios <- addPolygons(accidentes_barrios,
popup=popup,
fillColor = ~pal(barrios_med@data$NOMBRE_CLUSTER),
color= 'black',
weight = 1.5, fillOpacity = 0.6)
accidentes_barrios
# Agregar seguridad
barrios_med@data$NOMBRE_CLUSTER <- df_coloring$NOMBRE_CLUSTER[id_x]
View(barrios_med@data)
# Datos con los clusters
df_coloring <- read.csv("clusters_final-2.csv", header = TRUE, fileEncoding = "UTF-8")[,-c(1,2)]
barrios_med <- shapefile(medellin_map_location,
encoding="UTF-8",
use_iconv=TRUE)
colnames(df_coloring)<- c("NOMBRE","HERIDOS","SOLO_DANOS","NRO_CLUSTER","NOMBRE_CLUSTER")
View(df_coloring)
create_map <- function(){
# Leer datos
medellin_map_location <-"Barrio_Vereda.shp"
# Datos con los clusters
df_coloring <- read.csv("clusters_final-2.csv", header = TRUE, fileEncoding = "UTF-8")[,-c(1,2)]
barrios_med <- shapefile(medellin_map_location,
encoding="UTF-8",
use_iconv=TRUE)
colnames(df_coloring)<- c("NOMBRE","HERIDOS","MUERTOS","SOLO_DANOS","NRO_CLUSTER","NOMBRE_CLUSTER")
id_x <- match(barrios_med@data$NOMBRE,df_coloring$NOMBRE)
# Agregar seguridad
barrios_med@data$NOMBRE_CLUSTER <- df_coloring$NOMBRE_CLUSTER[id_x]
barrios_med@data$HERIDOS <- df_coloring$HERIDOS[id_x]
barrios_med@data$MUERTOS <- df_coloring$MUERTOS[id_x]
barrios_med@data$SOLO_DANOS <- df_coloring$SOLO_DANOS[id_x]
pal <- colorFactor(c("red","#ED683C","yellow","green","#D0C7C7"),
levels = c("Accidentalidad Alta",
"Accidentalidad Media",
"Accidentalidad moderada",
"Accidentalidad Baja",
NA))
popup <- paste(barrios_med@data$NOMBRE,
barrios_med@data$NOMBRE_CLUSTER,
paste('Muertos: ',barrios_med@data$MUERTOS),
paste('Heridos: ',barrios_med@data$HERIDOS),
paste('Solo daÃ±os: ',barrios_med@data$SOLO_DANOS),
sep="<br/>")
# Crear mapa
accidentes_barrios <- leaflet(barrios_med)
accidentes_barrios <- addProviderTiles(accidentes_barrios,provider="OpenStreetMap.Mapnik")
accidentes_barrios <- addPolygons(accidentes_barrios,
popup=popup,
fillColor = ~pal(barrios_med@data$NOMBRE_CLUSTER),
color= 'black',
weight = 1.5, fillOpacity = 0.6)
accidentes_barrios
}
create_map()
runApp('~/Documents/GitHub/Accidentalidad_Medellin_2020/Shiny_dashboard')
runApp('~/Documents/GitHub/Accidentalidad_Medellin_2020/Shiny_dashboard')
install.packages("rgdal")
runApp('~/Documents/GitHub/Accidentalidad_Medellin_2020/Shiny_dashboard')
runApp('~/Documents/GitHub/Accidentalidad_Medellin_2020/Shiny_dashboard')
runApp('~/Documents/GitHub/Accidentalidad_Medellin_2020/Shiny_dashboard')
runApp('~/Documents/GitHub/Accidentalidad_Medellin_2020/Shiny_dashboard')
runApp('~/Documents/GitHub/Accidentalidad_Medellin_2020/Shiny_dashboard')
runApp('~/Documents/GitHub/Accidentalidad_Medellin_2020/Shiny_dashboard')
runApp()
runApp('~/Documents/GitHub/Accidentalidad_Medellin_2020/Shiny_dashboard')
runApp('~/Documents/GitHub/Accidentalidad_Medellin_2020/Shiny_dashboard')
runApp('~/Documents/GitHub/Accidentalidad_Medellin_2020/Shiny_dashboard')
runApp('~/Documents/GitHub/Accidentalidad_Medellin_2020/Shiny_dashboard')
runApp('~/Documents/GitHub/Accidentalidad_Medellin_2020/Shiny_dashboard')
runApp('~/Documents/GitHub/Accidentalidad_Medellin_2020/Shiny_dashboard')
runApp('~/Documents/GitHub/Accidentalidad_Medellin_2020/Shiny_dashboard')
runApp('~/Documents/GitHub/Accidentalidad_Medellin_2020/Shiny_dashboard')
runApp('~/Documents/GitHub/Accidentalidad_Medellin_2020/Shiny_dashboard')
runApp('~/Documents/GitHub/Accidentalidad_Medellin_2020/Shiny_dashboard')
runApp('~/Documents/GitHub/Accidentalidad_Medellin_2020/Shiny_dashboard')
runApp()
runApp('~/Documents/GitHub/Accidentalidad_Medellin_2020/Shiny_dashboard')
runApp('~/Documents/GitHub/Accidentalidad_Medellin_2020/Shiny_dashboard')
runApp('~/Documents/GitHub/Accidentalidad_Medellin_2020/Shiny_dashboard')
runApp('~/Documents/GitHub/Accidentalidad_Medellin_2020/Shiny_dashboard')
runApp('~/Documents/GitHub/Accidentalidad_Medellin_2020/Shiny_dashboard')
runApp('~/Documents/GitHub/Accidentalidad_Medellin_2020/Shiny_dashboard')
runApp('~/Documents/GitHub/Accidentalidad_Medellin_2020/Shiny_dashboard')
runApp('~/Documents/GitHub/Accidentalidad_Medellin_2020/Shiny_dashboard')
runApp('~/Documents/GitHub/Accidentalidad_Medellin_2020/Shiny_dashboard')
install.packages("devtools")
library(devtools)
install_github("andreacirilloac/ramazon")
library(ramazon)
install_github("andreacirilloac/ramazon")
qnorm(0.07)
qnorm(0.05)
qnorm(0.07,lower.tail = F)
1-pnorm(27,mean = 6, sd = 3*sqrt(4))
1-pnorm(4*27,mean = 6, sd = 3*sqrt(4))
1-pnorm(27,mean = 6*4, sd = 6)
17/60
pnorm((17/60)/(1.7/10))-pnorm(-(17/60)/(1.7/10))
shinyApp(ui, server)
rm(list=ls())
runApp('~/Documents')
runApp('~/Documents')
runApp('Documents/GitHub/Accidentalidad_Medellin_2020/Shiny_dashboard')
install.packages("MPV")
# Parcial 1
library(MPV)
library(gamlss)
names(table.1)
names(table.b1)
dim(table.b1)
mod0 <- gamlss(y~x1+x2+x3+x6+x7+I(x1^2)+I(x3^2)+I(x6^2)+I(x7^2))
mod0 <- gamlss(y~x1+x2+x3+x6+x7+I(x1^2)+I(x3^2)+I(x6^2)+I(x7^2), data = table.b1)
summary(mod0)
mod1<-stepGAIC(mod0, k=3)
summary(mod1)
MSE(mod1)
rmse <- sqrt(mean((residuals(mod1)-fitted(mod1))^2))
rmse
mod0 <- gamlss(y~x1+x2+x3+x6+x7+I(x1^2)+I(x3^2)+I(x6^2)+I(x7^2), data = table.b1)
mod1<-stepGAIC(mod0, k=3)
rmse <- sqrt(mean((residuals(mod1)-fitted(mod1))^2))
rmse
library(ISLR)
dim(Carseats)
mod2 <- rpart(Sales~., data = Carseats)
# Punto 3
library(rpart)
library(ISLR)
mod2 <- rpart(Sales~., data = Carseats)
mod2
summary(mod2)
head(Carseats)
predict(mod2, newdata = data.frame(CompPrice = 150,
Income = 84,
Advertising = 9,
Population = 432,
Price = 134,
ShelveLoc = 'Medium',
Age = 64,
Education = 15,
Urban = 'Yes',
US = 'No'))
#Punto 4
library(olsrr)
ols_step_all_possible(y~.,data = table.b1)
model <- lm(y~., data = table.b1)
ols_step_all_possible(model)
res <- ols_step_all_possible(model)
plot(res)
plot(res)
names(res)
which.max(res$cp)
View(res)
res <- ols_step_all_possible(model)
View(res)
# Punto 5
fitDist(table.b9$y)
mod1 <- gamlss(y~x1+x2+x3+x4, family = SEP2)
mod1 <- gamlss(y~x1+x2+x3+x4, family = SEP2, data = table.b9)
summary(mod1)
mod1 <- gamlss(y~x1+x2+x3+x4, sigma.fo = ~x1+x2+x3+x4,family = SEP2, data = table.b9)
summary(mod1)
mod2 <- gamlss(y~x1+x2+x3+x4, sigma.fo = ~x2+x3+x4,family = SEP2, data = table.b9)
predict(mod2, newdata = data.frame(x1 = 2.14, x2 = 112, x3 = 0.34, x4 = 0.68))
mod1 <- gamlss(y~x1+x2+x3+x4, sigma.fo = ~x1+x2+x3+x4,family = SEP2, data = table.b9)
mod2 <- gamlss(y~x1+x2+x3+x4, sigma.fo = ~x2+x3+x4,family = SEP2, data = table.b9)
predict(mod2, newdata = data.frame(x1 = 2.14, x2 = 112, x3 = 0.34, x4 = 0.68))
# Punto 5
fitDist(table.b9$y)
summary(mod1)
mod2 <- gamlss(y~x1+x2+x3+x4,
sigma.fo = ~x3+x4,family = SEP2, data = table.b9)
predict(mod2, newdata = data.frame(x1 = 2.14, x2 = 112, x3 = 0.34, x4 = 0.68))
mod2 <- gamlss(y~x1+x2+x3+x4,
sigma.fo = ~x1+x2+x3+x4,family = SEP2, data = table.b9)
predict(mod2, newdata = data.frame(x1 = 2.14, x2 = 112, x3 = 0.34, x4 = 0.68))
predict(mod2, newdata = data.frame(x1 = 2.14, x2 = 112, x3 = 0.34, x4 = 0.68), type = 'response')
mod2 <- gamlss(y~x1+x2+x3+x4,
sigma.fo = ~x2+x3+x4,family = SEP2, data = table.b9)
predict(mod2, newdata = data.frame(x1 = 2.14, x2 = 112, x3 = 0.34, x4 = 0.68), type = 'response')
mod2 <- gamlss(y~x1+x2+x3+x4,
sigma.fo = ~x2+x3+x4,family = SEP2, data = table.b9)
predict(mod2, newdata = data.frame(x1 = 2.14, x2 = 112, x3 = 0.34, x4 = 0.68), type = 'response')
mod1 <- gamlss(y~x1+x2+x3+x4, sigma.fo = ~x1+x2+x3+x4,family = SEP2, data = table.b9)
mod2 <- gamlss(y~x1+x2+x3+x4,
sigma.fo = ~x2+x3+x4,family = SEP2, data = table.b9)
predict(mod2, newdata = data.frame(x1 = 2.14, x2 = 112, x3 = 0.34, x4 = 0.68), type = 'response')
mod2 <- gamlss(y~x1+x2+x3+x4,
sigma.fo = ~x2+x3+x4,family = SEP2, data = table.b9)
mod2 <- gamlss(y~x1+x2+x3+x4,
sigma.fo = ~x3+x4,family = SEP2, data = table.b9)
predict(mod2, newdata = data.frame(x1 = 2.14, x2 = 112, x3 = 0.34, x4 = 0.68), type = 'response')
mod2 <- gamlss(y~x2+x3+x4,
sigma.fo = ~x2+x3+x4,family = SEP2, data = table.b9)
predict(mod2, newdata = data.frame(x1 = 2.14, x2 = 112, x3 = 0.34, x4 = 0.68), type = 'response')
mod2 <- gamlss(y~x1+x2+x3+x4,
sigma.fo = ~x2+x3+x4,family = SEP2, data = table.b9)
predict(mod2, newdata = data.frame(x1 = 2.14, x2 = 112, x3 = 0.34, x4 = 0.68), type = 'response')
mod2 <- gamlss(y~x1+x2+x3+x4,
sigma.fo = ~x2+x3+x4,family = SEP2(), data = table.b9)
predict(mod2, newdata = data.frame(x1 = 2.14, x2 = 112, x3 = 0.34, x4 = 0.68), type = 'response')
mod2 <- rpart(Sales~., data = Carseats)
plot(mod2)
prp(mod1)
library(rpart.plot)
intstall.packages(rpart.plot)
install.packages(rpart.plot)
install.packages('rpart.plot')
library(rpart.plot)
rpart(mod2)
mod2 <- rpart(Sales~., data = Carseats)
rpart(mod2)
prp(mod2)
predict(mod2, newdata = data.frame(CompPrice = 150,
Income = 84,
Advertising = 9,
Population = 432,
Price = 134,
ShelveLoc = 'Medium',
Age = 64,
Education = 15,
Urban = 'Yes',
US = 'No'))
#Punto 7
mod7 <- lm(y~x4+x1+x9+x6+x2+x8+x5, data = table.b3)
vif(mod7)
VIF(mod7)
View(res)
model <- lm(y~., data = table.b1)
res <- ols_step_all_possible(model)
View(res)
plot(res)
install.packages("regclass")
res[143,]
#Punto 7
library(regclass)
mod7 <- lm(y~x4+x1+x9+x6+x2+x8+x5, data = table.b3)
VIF(mod7)
#Punto 9
mod9 <- lm(y~x1+x2+x3+x4+x5+x6+x7+x8+x9, data = table.b4)
#Punto 9
full.model <- lm(y~x1+x2+x3+x4+x5+x6+x7+x8+x9, data = table.b4)
modback <- ols_step_backward_p(full.model,prem = 0.08)
summary(modback)
modback
predict(modback, newdata = data.frame(x1 = 7.1597,
x2 = 1,
X3 = 5.955,
x4 = -0.179,
x5 = 0,
x6 = 6,
x7 = 4,
x8 = 39,
x9 = 0))
plot(modback)
plot(modback)
names(modback)
modback$steps
mod9 <- c(y~x1+x2, data = table.b4)
predict(mod9, newdata = data.frame(x1 = 7.1597,
x2 = 1))
mod9 <- c(y~x1+x2, data = table.b4)
predict(mod9, newdata = data.frame(x1 = 7.1597,
x2 = 1))
mod9 <- lm(y~x1+x2, data = table.b4)
predict(mod9, newdata = data.frame(x1 = 7.1597,
x2 = 1))
y <- 0.5*x1
y <- rnorm(10, 0.5)
x1 <- rnorm(10)
x2 <- rnorm(10)
x3 <- rexp(10)
x4 <- rexp(10)
x5 <- runif(10)
model <- lm(y~x1+x2+x3+x4+x5)
res <- ols_step_all_possible(model)
View(res)
5+10+10+5+1
install.packages("mixlm")
library(mixlm)
backward(full.model, alpha = 0.08)
10.042+2.713*7.1597+x2
10.042+2.713*7.1597+1
model <- lm(y~., data = table.b1)
res <- ols_step_all_possible(model)
#Punto 4
library(olsrr)
model <- lm(y~., data = table.b1)
res <- ols_step_all_possible(model)
model <- lm(y~., data = table.b1)
res <- ols_step_all_possible(model)
names(table.b1)
model <- lm(y~x1+x2+x3+x4+x5+x6+x7+x8+x9, data = table.b1)
res <- ols_step_all_possible(model)
model <- lm(y~x1+x2+x3+x4+x5+x6+x7+x8+x9, data = table.b1)
summary(lm)
summary(model)
model <- lm(mpg ~ disp + hp + wt + qsec, data=mtcars)
library(olsrr)
res <- ols_step_all_possible(model)
res
# Parcial 1
library(MPV)
#Punto 4
library(olsrr)
model <- lm(y~x1+x2+x3+x4+x5+x6+x7+x8+x9, data = table.b1)
res <- ols_step_all_possible(model)
which.min(res[res$n == 4]$cp)
names(res)
res$cp[res$n == 4]
which.min(res$cp[res$n == 4])
res$cp[res$n == 4 & res$cp < 5,]
res[res$n == 4 & res$cp < 5,]
res[res$n == 4 & res$cp < 3,]
(2.9+3+3.8+3)
(2.9+3+3.8+3)/4
(2.9+3+3.8+3)/4
3.175*0.8
4*0.1
0.5+2.54
0.4+2.54
shiny::runApp('Documents/GitHub/Accidentalidad_Medellin_2020/Prediccion_accidentalidad')
runApp('Documents/GitHub/Accidentalidad_Medellin_2020/Prediccion_accidentalidad')
runApp('Documents/GitHub/Accidentalidad_Medellin_2020/Prediccion_accidentalidad')
runApp('Documents/GitHub/Accidentalidad_Medellin_2020/Prediccion_accidentalidad')
setwd("~/Documents/GitHub/Accidentalidad_Medellin_2020/Prediccion_accidentalidad")
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
